{"ast":null,"code":"var _jsxFileName = \"/home/mk/code/stellar/frontend/src/pages/QuestionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { Link, useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionPage = ({\n  history\n}) => {\n  _s();\n  const {\n    id: noteId\n  } = useParams();\n  const [note, setNote] = useState(null);\n  let navigate = useNavigate();\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  const getNote = async () => {\n    if (noteId === 'new') return;\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/note/${noteId}/`);\n      const data = await response.json();\n      setNote(data);\n    } catch (error) {\n      console.error('Error fetching note:', error);\n    }\n  };\n  const createNote = async () => {\n    try {\n      await fetch(`http://127.0.0.1:8000/api/note/create/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(note)\n      }).then(navigate('/'));\n    } catch (error) {\n      console.error('Error creating note:', error);\n    }\n  };\n  const updateNote = async () => {\n    try {\n      await fetch(`http://127.0.0.1:8000/api/note/${noteId}/update/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(note)\n      });\n      navigate('/');\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n  };\n  const deleteNote = async () => {\n    try {\n      await fetch(`http://127.0.0.1:8000/api/note/${noteId}/delete/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      navigate('/');\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n  const handleSubmit = () => {\n    console.log('NOTE:', note);\n    if (noteId !== 'new' && note.body === \"\") {\n      deleteNote();\n    } else if (noteId !== 'new') {\n      updateNote();\n    } else if (noteId === 'new' && note !== null) {\n      createNote();\n    }\n    navigate('/');\n  };\n  const handleChange = value => {\n    setNote(prevNote => ({\n      ...prevNote,\n      body: value\n    }));\n    console.log('Handle Change:', note);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), noteId !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => handleChange(e.target.value),\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionPage, \"zyce8EqQf+dwTvHSLMH54W4Yeq4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuestionPage;\nexport default QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactComponent","ArrowLeft","Link","useParams","useNavigate","jsxDEV","_jsxDEV","QuestionPage","history","_s","id","noteId","note","setNote","navigate","getNote","response","fetch","data","json","error","console","createNote","method","headers","body","JSON","stringify","then","updateNote","deleteNote","handleSubmit","log","handleChange","value","prevNote","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/mk/code/stellar/frontend/src/pages/QuestionPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { Link, useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nconst QuestionPage = ({ history }) => {\n    const { id: noteId } = useParams();\n    const [note, setNote] = useState(null);\n    let navigate = useNavigate();\n    useEffect(() => {\n        getNote();\n    }, [noteId]);\n\n    const getNote = async () => {\n        if (noteId === 'new') return;\n\n        try {\n            const response = await fetch(`http://127.0.0.1:8000/api/note/${noteId}/`);\n            const data = await response.json();\n            setNote(data);\n        } catch (error) {\n            console.error('Error fetching note:', error);\n        }\n    };\n\n    const createNote = async () => {\n        try {\n            await fetch(`http://127.0.0.1:8000/api/note/create/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(note),\n            }).then(navigate('/'));\n                  \n        } catch (error) {\n            console.error('Error creating note:', error);\n        }\n    };\n\n    const updateNote = async () => {\n        try {\n            await fetch(`http://127.0.0.1:8000/api/note/${noteId}/update/`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(note),\n            });\n\n            navigate('/');\n        } catch (error) {\n            console.error('Error updating note:', error);\n        }\n    };\n\n    const deleteNote = async () => {\n        try {\n            await fetch(`http://127.0.0.1:8000/api/note/${noteId}/delete/`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            navigate('/');\n        } catch (error) {\n            console.error('Error deleting note:', error);\n        }\n    };\n\n    const handleSubmit = () => {\n        console.log('NOTE:', note);\n        if (noteId !== 'new' && note.body === \"\") {\n            deleteNote();\n        } else if (noteId !== 'new') {\n            updateNote();\n        } else if (noteId === 'new' && note !== null) {\n            createNote();\n        }\n        navigate('/');\n    \n    };\n\n    const handleChange = (value) => {\n        setNote((prevNote) => ({ ...prevNote, body: value }));\n        console.log('Handle Change:', note);\n    };\n    return (\n        <div className=\"note\">\n            <div className=\"note-header\">\n                <h3>\n                    <ArrowLeft onClick={handleSubmit} />\n                </h3>\n                {noteId !== 'new' ? (\n                    <button onClick={deleteNote}>Delete</button>\n                ) : (\n                    <button onClick={handleSubmit}>Done</button>\n                )}\n            </div>\n            \n            <textarea onChange={(e) => handleChange(e.target.value)} value={note?.body}></textarea>\n           \n        </div>\n    );\n};\n\nexport default QuestionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/mk/code/stellar/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport QuestionListPage from './pages/QuestionListPage';\nimport AddQuestionForm from './pages/AddQuestionForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n\n  // Function to fetch questions from the database\n  const fetchQuestions = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/user/getquestions');\n      if (!response.ok) {\n        throw new Error('Failed to fetch questions');\n      }\n      const data = await response.json();\n      setQuestions(data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  const addQuestion = async newQuestion => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/user/postquestion', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newQuestion)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add question');\n      }\n      const addedQuestion = await response.json();\n      setQuestions([...questions, addedQuestion]);\n    } catch (error) {\n      console.error('Error adding question:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Question List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddQuestionForm, {\n        onAddQuestion: addQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        questions: questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","QuestionListPage","AddQuestionForm","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","fetchQuestions","response","fetch","ok","Error","data","json","error","console","addQuestion","newQuestion","method","headers","body","JSON","stringify","addedQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddQuestion","QuestionList","_c","$RefreshReg$"],"sources":["/home/mk/code/stellar/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuestionListPage from './pages/QuestionListPage';\nimport AddQuestionForm from './pages/AddQuestionForm';\nimport './App.css';\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n\n  // Function to fetch questions from the database\n  const fetchQuestions = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/user/getquestions');\n      if (!response.ok) {\n        throw new Error('Failed to fetch questions');\n      }\n      const data = await response.json();\n      setQuestions(data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n\n  const addQuestion = async (newQuestion) => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/user/postquestion', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newQuestion),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add question');\n      }\n      const addedQuestion = await response.json();\n      setQuestions([...questions, addedQuestion]);\n    } catch (error) {\n      console.error('Error adding question:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Question List</h1>\n        <AddQuestionForm onAddQuestion={addQuestion} />\n        <QuestionList questions={questions} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;MAC3E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,YAAY,CAACM,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdS,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,WAAW,GAAG,MAAOC,WAAW,IAAK;IACzC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1ES,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;MAClC,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,MAAMY,aAAa,GAAG,MAAMf,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC3CP,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEkB,aAAa,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBvB,OAAA;MAAQsB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BvB,OAAA;QAAAuB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB3B,OAAA,CAACF,eAAe;QAAC8B,aAAa,EAAEd;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/C3B,OAAA,CAAC6B,YAAY;QAAC1B,SAAS,EAAEA;MAAU;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACzB,EAAA,CAjDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
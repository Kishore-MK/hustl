{"ast":null,"code":"var _jsxFileName = \"/home/mk/code/stellar/frontend/src/pages/QuestionsListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ListItem from '../components/ListItem';\nimport AddButton from '../components/AddButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsListPage = () => {\n  _s();\n  let [question, setquestion] = useState([]);\n  useEffect(() => {\n    getNotes();\n  }, []);\n  let getNotes = async () => {\n    console.log(\"called\");\n    let response = await fetch('http://127.0.0.1:8000/api/user/getquestion/?question_id=1');\n    let data = await response.json();\n    console.log(data);\n    setNotes(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notes-title\",\n        children: \"\\u2636 Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"notes-count\",\n        children: notes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        note: note\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionsListPage, \"Sp06+ekYzAT0yzeWOLM4tWjtgSs=\");\n_c = QuestionsListPage;\nexport default QuestionsListPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionsListPage\");","map":{"version":3,"names":["React","useState","useEffect","ListItem","AddButton","jsxDEV","_jsxDEV","QuestionsListPage","_s","question","setquestion","getNotes","console","log","response","fetch","data","json","setNotes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","notes","length","map","note","index","_c","$RefreshReg$"],"sources":["/home/mk/code/stellar/frontend/src/pages/QuestionsListPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ListItem from '../components/ListItem'\nimport AddButton from '../components/AddButton'\n\n\nconst QuestionsListPage = () => {\n\n    let [question, setquestion] = useState([])\n\n    useEffect(() => {\n        getNotes()\n    }, [])\n\n\n    let getNotes = async () => {\n        console.log(\"called\");\n        let response = await fetch('http://127.0.0.1:8000/api/user/getquestion/?question_id=1');\n        let data = await response.json();\n        console.log(data);\n        setNotes(data);\n        \n    }\n\n    return (\n        <div className=\"notes\">\n            <div className=\"notes-header\">\n                <h2 className=\"notes-title\">&#9782; Notes</h2>\n                <p className=\"notes-count\">{notes.length}</p>\n            </div>\n\n            <div className=\"notes-list\">\n                {notes.map((note, index) => (\n                    <ListItem key={index} note={note} />\n                ))}\n            </div>\n            <AddButton />\n        </div>\n    )\n}\n\nexport default QuestionsListPage\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE5B,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZS,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIA,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACvBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAA2D,CAAC;IACvF,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCL,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IACjBE,QAAQ,CAACF,IAAI,CAAC;EAElB,CAAC;EAED,oBACIV,OAAA;IAAKa,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBd,OAAA;MAAKa,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBd,OAAA;QAAIa,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9ClB,OAAA;QAAGa,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEK,KAAK,CAACC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAENlB,OAAA;MAAKa,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBK,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBvB,OAAA,CAACH,QAAQ;QAAayB,IAAI,EAAEA;MAAK,GAAlBC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNlB,OAAA,CAACF,SAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAAAhB,EAAA,CAjCKD,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAmCvB,eAAeA,iBAAiB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
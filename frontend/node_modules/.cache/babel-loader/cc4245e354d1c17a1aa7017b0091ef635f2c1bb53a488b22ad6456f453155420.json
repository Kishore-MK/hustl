{"ast":null,"code":"import { requestAccess, signTransaction, setAllowed } from \"@stellar/freighter-api\";\nasync function checkConnection() {\n  const isAllowed = await setAllowed();\n  if (isAllowed) {\n    return isAllowed;\n  }\n}\nconst retrievePublicKey = async () => {\n  let publicKey = \"\";\n  let error = \"\";\n  console.log(publicKey);\n  try {\n    publicKey = await requestAccess();\n  } catch (e) {\n    error = e;\n  }\n  if (error) {\n    return error;\n  }\n  return publicKey;\n};\nconst userSignTransaction = async (xdr, network, signWith) => {\n  let signedTransaction = \"\";\n  let error = \"\";\n  try {\n    signedTransaction = await signTransaction(xdr, {\n      network,\n      accountToSign: signWith\n    });\n  } catch (e) {\n    error = e;\n  }\n  if (error) {\n    return error;\n  }\n  return signedTransaction;\n};\nexport { checkConnection, retrievePublicKey, userSignTransaction };","map":{"version":3,"names":["requestAccess","signTransaction","setAllowed","checkConnection","isAllowed","retrievePublicKey","publicKey","error","console","log","e","userSignTransaction","xdr","network","signWith","signedTransaction","accountToSign"],"sources":["/home/mk/code/stellar/frontend/src/components/freighter.js"],"sourcesContent":["import {\n    requestAccess,\n    signTransaction,\n    setAllowed,\n  } from \"@stellar/freighter-api\";\n  \n  async function checkConnection() {\n    const isAllowed = await setAllowed();\n    if (isAllowed) {\n      return isAllowed;\n    }\n  }\n  \n  const retrievePublicKey = async () => {\n    let publicKey = \"\";\n    let error = \"\";\n    console.log(publicKey)\n    try {\n      publicKey = await requestAccess();\n    } catch (e) {\n      error = e;\n    }\n    if (error) {\n      return error;\n    }\n    return publicKey;\n  };\n  \n  const userSignTransaction = async (xdr, network, signWith) => {\n    let signedTransaction = \"\";\n    let error = \"\";\n  \n    try {\n      signedTransaction = await signTransaction(xdr, {\n        network,\n        accountToSign: signWith,\n      });\n    } catch (e) {\n      error = e;\n    }\n  \n    if (error) {\n      return error;\n    }\n  \n    return signedTransaction;\n  };\n  \n  export { checkConnection, retrievePublicKey, userSignTransaction };"],"mappings":"AAAA,SACIA,aAAa,EACbC,eAAe,EACfC,UAAU,QACL,wBAAwB;AAE/B,eAAeC,eAAeA,CAAA,EAAG;EAC/B,MAAMC,SAAS,GAAG,MAAMF,UAAU,CAAC,CAAC;EACpC,IAAIE,SAAS,EAAE;IACb,OAAOA,SAAS;EAClB;AACF;AAEA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,KAAK,GAAG,EAAE;EACdC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EACtB,IAAI;IACFA,SAAS,GAAG,MAAMN,aAAa,CAAC,CAAC;EACnC,CAAC,CAAC,OAAOU,CAAC,EAAE;IACVH,KAAK,GAAGG,CAAC;EACX;EACA,IAAIH,KAAK,EAAE;IACT,OAAOA,KAAK;EACd;EACA,OAAOD,SAAS;AAClB,CAAC;AAED,MAAMK,mBAAmB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,EAAEC,QAAQ,KAAK;EAC5D,IAAIC,iBAAiB,GAAG,EAAE;EAC1B,IAAIR,KAAK,GAAG,EAAE;EAEd,IAAI;IACFQ,iBAAiB,GAAG,MAAMd,eAAe,CAACW,GAAG,EAAE;MAC7CC,OAAO;MACPG,aAAa,EAAEF;IACjB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOJ,CAAC,EAAE;IACVH,KAAK,GAAGG,CAAC;EACX;EAEA,IAAIH,KAAK,EAAE;IACT,OAAOA,KAAK;EACd;EAEA,OAAOQ,iBAAiB;AAC1B,CAAC;AAED,SAASZ,eAAe,EAAEE,iBAAiB,EAAEM,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}